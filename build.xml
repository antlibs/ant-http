<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2012 the original author or authors.
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    
        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project name="ml-ant-http" default="dist" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- Ivy -->
  <property name="ivy.version" value="2.4.0"/>
  <property name="ivy.dir" value="${user.home}/.ivy2/cache/org.apache.ivy/jars"/>
  <property name="ivy.jar.name" value="ivy-${ivy.version}.jar"/>
  <property name="ivy.jar.name" value="ivy-${ivy.version}.jar"/>
  <available property="has.ivy" file="${ivy.dir}/${ivy.jar.name}" type="file"/>

  <target name="get-ivy" description="o Get Ivy jar unless already cached" unless="has.ivy">
    <mkdir dir="${ivy.dir}"/>
    <get usetimestamp="true" src="https://repository.apache.org/content/repositories/releases/org/apache/ivy/ivy/${ivy.version}/${ivy.jar.name}"
         skipexisting="true"
         dest="${ivy.dir}/${ivy.jar.name}"/>
  </target>

  <target name="init-ivy" description="o Initialize Ivy" depends="get-ivy">
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpath="${ivy.dir}/${ivy.jar.name}"/>
    <ivy:settings file="${basedir}/ivy.settings.xml"/>
  </target>

  <property name="ml-ant-http.src.dir" location="src"/>
  <property name="ml-ant-http.java.src.dir" location="${ml-ant-http.src.dir}/main/java"/>
  <property name="ml-ant-http.test.src.dir" location="${ml-ant-http.src.dir}/test/java"/>
  <property name="ml-ant-http.test.resources.dir" location="${ml-ant-http.src.dir}/test/resources"/>
  <property name="ml-ant-http.build.dir" location="build"/>
  <property name="ml-ant-http.build.classes.dir" location="${ml-ant-http.build.dir}/classes"/>
  <property name="ml-ant-http.build.test.classes.dir" location="${ml-ant-http.build.dir}/test/classes"/>
  <property name="ml-ant-http.build.docs.dir" location="${ml-ant-http.build.dir}/docs"/>
  <property name="ml-ant-http.dist.dir" location="dist"/>
  <property name="ml-ant-http.site.dir" location="${ml-ant-http.src.dir}/site/resources"/>
  <property name="ml-ant-http.license.dir" location="${basedir}"/>
  <property name="ml-ant-http.license.file" value="LICENSE"/>
  <property name="ml-ant-http.test.report.dir" location="${ml-ant-http.build.dir}/test/report"/>

  <target name="clean">
    <delete dir="${ml-ant-http.build.dir}"/>
    <delete dir="${ml-ant-http.dist.dir}"/>
  </target>

  <target name="init" depends="init-ivy">
    <mkdir dir="${ml-ant-http.build.dir}"/>
    <mkdir dir="${ml-ant-http.build.classes.dir}"/>
    <mkdir dir="${ml-ant-http.build.docs.dir}"/>
    <mkdir dir="${ml-ant-http.dist.dir}"/>
  </target>

  <target name="resolve" depends="init">
    <ivy:resolve file="ivy.xml"/>
    <ivy:cachepath pathid="compile.classpath" conf="compile" type="jar"/>
    <ivy:cachepath pathid="runtime.classpath" conf="runtime" type="jar"/>
    <ivy:cachepath pathid="test.classpath" conf="test" type="jar"/>
    <property name="ml-ant-http.dist.jar.dir" location="${ml-ant-http.dist.dir}/${ivy.module}-${ivy.revision}"/>
    <mkdir dir="${ml-ant-http.dist.jar.dir}"/>
  </target>

  <target name="compile" depends="resolve">
    <javac debug="yes" destdir="${ml-ant-http.build.classes.dir}" classpathref="compile.classpath" includeantruntime="false">
      <src path="${ml-ant-http.java.src.dir}"/>
    </javac>
  </target>

  <target name="jar" depends="compile">
    <jar destfile="${ml-ant-http.dist.jar.dir}/${ivy.module}-${ivy.revision}.jar" basedir="${ml-ant-http.build.classes.dir}">
      <metainf dir="${ml-ant-http.license.dir}">
        <include name="${ml-ant-http.license.file}"/>
      </metainf>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
      </manifest>
    </jar>
  </target>

  <target name="jar.src" depends="jar">
    <jar destfile="${ml-ant-http.dist.jar.dir}/${ivy.module}-${ivy.revision}-sources.jar" basedir="${ml-ant-http.java.src.dir}">
      <metainf dir="${ml-ant-http.license.dir}">
        <include name="${ml-ant-http.license.file}"/>
      </metainf>
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
      </manifest>
    </jar>
  </target>

  <target name="javadoc" depends="resolve">
    <javadoc destdir="${ml-ant-http.build.docs.dir}" author="true" version="true" use="true" windowtitle="missing link ant http task ${ivy.revision}">

      <packageset dir="${ml-ant-http.java.src.dir}" defaultexcludes="yes">
        <include name="org/missinglink/**"/>
      </packageset>

      <doctitle><![CDATA[<h1>missing link ant http task ${ivy.revision}</h1>]]></doctitle>
      <bottom><![CDATA[<i>missing link ant http task ${ivy.revision}</i>]]></bottom>
      <tag name=".todo" scope="all" description="To do:"/>
      <link href="http://download.oracle.com/javase/6/docs/api/"/>
    </javadoc>

    <zip destfile="${ml-ant-http.dist.jar.dir}/${ivy.module}-${ivy.revision}-api.zip" basedir="${ml-ant-http.build.docs.dir}"/>
  </target>

  <target name="copy.dist.files" depends="jar.src">
    <!-- license -->
    <copy filtering="false" flatten="false" todir="${ml-ant-http.dist.jar.dir}">
      <fileset dir="${ml-ant-http.license.dir}">
        <include name="${ml-ant-http.license.file}"/>
      </fileset>
    </copy>

    <filter token="ml-ant-http-version" value="${ivy.revision}"/>

    <copy filtering="true" flatten="true" todir="${ml-ant-http.dist.jar.dir}">
      <fileset dir="${ml-ant-http.site.dir}">
        <include name="ant/build-sample.xml"/>
      </fileset>
    </copy>
    <copy filtering="false" flatten="true" todir="${ml-ant-http.dist.jar.dir}">
      <fileset dir="${ml-ant-http.site.dir}">
        <include name="doc/readme.pdf"/>
      </fileset>
    </copy>
  </target>

  <target name="dist" depends="copy.dist.files,javadoc">
    <zip destfile="${ml-ant-http.dist.dir}/${ivy.module}-${ivy.revision}.zip" basedir="${ml-ant-http.dist.jar.dir}"/>
  </target>

  <target name="compile-tests" depends="compile">
    <mkdir dir="${ml-ant-http.build.test.classes.dir}"/>
    <javac debug="yes" destdir="${ml-ant-http.build.test.classes.dir}" includeantruntime="false">
      <classpath>
        <pathelement location="${ml-ant-http.build.classes.dir}"/>
        <path refid="test.classpath"/>
      </classpath>
      <src path="${ml-ant-http.test.src.dir}"/>
    </javac>
    <copy todir="${ml-ant-http.build.test.classes.dir}">
      <fileset dir="${ml-ant-http.test.src.dir}" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="test-internal" depends="compile-tests">
    <mkdir dir="${ml-ant-http.test.report.dir}"/>
    <junit printsummary="yes" haltonerror="false" haltonfailure="false"
	   errorproperty="junit.error" failureproperty="junit.failure"
	   fork="true">
      <classpath>
        <pathelement location="${ml-ant-http.test.resources.dir}"/>
        <pathelement location="${ml-ant-http.build.test.classes.dir}"/>
        <pathelement location="${ml-ant-http.build.classes.dir}"/>
        <path refid="test.classpath"/>
      </classpath>
      <formatter type="plain" usefile="no"/>
      <formatter type="xml"/>
      <batchtest todir="${ml-ant-http.test.report.dir}">
        <fileset dir="${ml-ant-http.test.src.dir}">
          <include name="**/*Test.java"/>
          <exclude name="**/Abstract*Test.java"/>
          <exclude name="**/*$*"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="test" depends="test-internal">
    <fail message="JUnit error (${junit.error}) encountered. See logs (in ${ml-ant-http.test.report.dir}) for details (use the target test-report to run the test with a report)" if="junit.error"/>
    <fail message="JUnit failure (${junit.failure}) encountered. See logs (in ${ml-ant-http.test.report.dir}) for details (use the target test-report to run the test with a report)" if="junit.failure"/>
  </target>

  <target name="test-report" depends="test-internal" description="o Make report of JUnit tests">
    <junitreport todir="${ml-ant-http.test.report.dir}">
      <fileset dir="${ml-ant-http.test.report.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${ml-ant-http.build.docs.dir}/test-report"/>
    </junitreport>
    <fail message="JUnit error (${junit.error}) encountered. See logs (in ${ml-ant-http.test.report.dir}) or report (in ${ml-ant-http.build.docs.dir}/test-report)" if="junit.error"/>
    <fail message="JUnit failure (${junit.failure}) encountered. See logs (in ${ml-ant-http.test.report.dir}) or report (in ${ml-ant-http.build.docs.dir}/test-report)" if="junit.failure"/>
  </target>

</project>
